// data_augments.js

const ALL_AUGMENTATIONS = [
    // Common
    { id: "hp_boost_s", name: "+15 Max HP", description: "Small health increase.", rarity: "Common", apply: (p) => { p.maxHp = (p.maxHp || 0) + 15; p.hp = Math.min((p.hp || 0) + 15, p.maxHp); }},
    { id: "dmg_boost_s", name: "+7% Damage", description: "Minor damage increase.", rarity: "Common", apply: (p) => { p.damageMultiplier = (p.damageMultiplier || 1.0) + 0.07; }},
    { id: "firerate_boost_s", name: "+7% Fire Rate", description: "Minor fire rate increase.", rarity: "Common", apply: (p) => { p.shotsPerSecond = (p.shotsPerSecond || 1.0) * 1.07; p.fireRate = 1000 / p.shotsPerSecond; }},
    { id: "speed_boost_s", name: "+5% Speed", description: "Minor speed increase.", rarity: "Common", apply: (p) => { p.speed = (p.speed || 1.0) * 1.05; }},
    { id: "xp_radius_s", name: "Magnet S", description: "+25% XP Collection Radius", rarity: "Common", apply: (p) => { p.xpCollectionRadiusMultiplier = (p.xpCollectionRadiusMultiplier || 1.0) * 1.25; }},
    { id: "hp_regen_s", name: "Regenerative Nanites S", description: "+0.5 HP/sec Regen.", rarity: "Common", apply: (p) => { p.hpRegenRate = (p.hpRegenRate || 0) + 0.5; }},
    { id: "dmg_reduction_s", name: "Ballistic Weave S", description: "Reduce incoming damage by 3%.", rarity: "Common", apply: (p) => { p.damageReduction = (p.damageReduction || 0) + 0.03; }},
    { id: "ammo_capacity_s", name: "Extra Pockets S", description: "+10% Max Ammo.", rarity: "Common", apply: (p) => { p.maxAmmoMultiplier = (p.maxAmmoMultiplier || 1.0) * 1.10; p.maxAmmo = Math.floor(p.baseStats.maxAmmo * p.maxAmmoMultiplier); if (p.currentAmmo > p.maxAmmo) p.currentAmmo = p.maxAmmo; }},
    { id: "reload_speed_s", name: "Quick Fingers S", description: "+7% Reload Speed.", rarity: "Common", apply: (p) => { p.reloadTimeMultiplier = (p.reloadTimeMultiplier || 1.0) * 0.93; p.reloadTime = p.baseStats.reloadTime * p.reloadTimeMultiplier; }},
    { id: "projectile_size_s", name: "Bigger Bullets S", description: "+10% Projectile Size.", rarity: "Common", apply: (p) => { p.projectileSizeMultiplier = (p.projectileSizeMultiplier || 1.0) * 1.10; }},
    { id: "xp_gain_s", name: "Fast Learner S", description: "+5% XP Gain.", rarity: "Common", apply: (p) => { p.xpGainMultiplier = (p.xpGainMultiplier || 1.0) * 1.05; }},
    { id: "crit_chance_xs", name: "Faint Hope", description: "+3% Crit Chance.", rarity: "Common", apply: (p) => { p.critChance = (p.critChance || 0) + 0.03; }},
    { id: "knockback_s", name: "Impact Rounds S", description: "+10% Knockback Strength.", rarity: "Common", apply: (p) => { p.knockbackMultiplier = (p.knockbackMultiplier || 1.0) * 1.10; }},
    { id: "pickup_range_m", name: "Magnet M", description: "+50% Pickup Radius (XP, HP, etc.).", rarity: "Common", apply: (p) => { p.pickupRadiusMultiplier = (p.pickupRadiusMultiplier || 1.0) * 1.50; p.xpCollectionRadiusMultiplier = (p.xpCollectionRadiusMultiplier || 1.0) * 1.50; }},
    { id: "dodge_chance_s", name: "Slight of Foot S", description: "+3% Dodge Chance.", rarity: "Common", apply: (p) => { p.dodgeChance = (p.dodgeChance || 0) + 0.03; }},
    { id: "healing_amp_s", name: "Med-Kit Upgrade S", description: "+10% all incoming HP healing.", rarity: "Common", apply: (p) => { p.healingAmp = (p.healingAmp || 1.0) * 1.10; }},
    { id: "credits_s", name: "Small Stash", description: "Gain 50 Credits immediately.", rarity: "Common", apply: (p) => { p.runCurrency = (p.runCurrency || 0) + 50; }},

    // Uncommon
    { id: "hp_boost_m", name: "+35 Max HP", description: "Medium health increase.", rarity: "Uncommon", apply: (p) => { p.maxHp = (p.maxHp || 0) + 35; p.hp = Math.min((p.hp || 0) + 35, p.maxHp); }},
    { id: "dmg_boost_m", name: "+15% Damage", description: "Medium damage increase.", rarity: "Uncommon", apply: (p) => { p.damageMultiplier = (p.damageMultiplier || 1.0) + 0.15; }},
    { id: "firerate_boost_m", name: "+15% Fire Rate", description: "Medium fire rate increase.", rarity: "Uncommon", apply: (p) => { p.shotsPerSecond = (p.shotsPerSecond || 1.0) * 1.15; p.fireRate = 1000 / p.shotsPerSecond; }},
    { id: "crit_chance_s", name: "Critical Lens S", description: "+7% Crit Chance", rarity: "Uncommon", apply: (p) => { p.critChance = (p.critChance || 0) + 0.07; }},
    { id: "proj_speed_s", name: "Velocity Coils S", description: "+15% Projectile Speed", rarity: "Uncommon", apply: (p) => { p.bulletSpeed = (p.bulletSpeed || 1.0) * 1.15; }},
    { id: "hp_on_kill_s", name: "Vampiric Touch S", description: "Heal 1 HP on Kill.", rarity: "Uncommon", apply: (p) => { p.hpOnKill = (p.hpOnKill || 0) + 1; }},
    { id: "evasion_s", name: "Nimble Feet S", description: "+5% Evasion Chance (separate from dodge).", rarity: "Uncommon", apply: (p) => { p.evasionChance = (p.evasionChance || 0) + 0.05; }},
    { id: "crit_damage_xs", name: "Precision Strikes XS", description: "+20% Crit Damage.", rarity: "Uncommon", apply: (p) => { p.critDamageMultiplier = (p.critDamageMultiplier || 1.5) + 0.20; }},
    { id: "elemental_fire_chance_s", name: "Incendiary Coating S", description: "+5% Chance to Ignite enemies for 3s.", rarity: "Uncommon", apply: (p) => { p.elementalChance = (p.elementalChance || {}); p.elementalChance.fire = (p.elementalChance.fire || 0) + 0.05; p.fireDotDuration = (p.fireDotDuration || 3000); }},
    { id: "elemental_ice_chance_s", name: "Cryo Coating S", description: "+5% Chance to Chill enemies (slow 20%) for 2s.", rarity: "Uncommon", apply: (p) => { p.elementalChance = (p.elementalChance || {}); p.elementalChance.ice = (p.elementalChance.ice || 0) + 0.05; p.iceSlowFactor = (p.iceSlowFactor || 0.2); p.iceSlowDuration = (p.iceSlowDuration || 2000); }},
    { id: "projectile_bounce_s", name: "Ricochet S", description: "Projectiles bounce +1 time.", rarity: "Uncommon", apply: (p) => { p.projectileBounces = (p.projectileBounces || 0) + 1; }},
    { id: "speed_boost_m", name: "Agility Matrix M", description: "+10% Speed.", rarity: "Uncommon", apply: (p) => { p.speed = (p.speed || 1.0) * 1.10; }},
    { id: "firerate_tradeoff_dmg_s", name: "Light Trigger", description: "+15% Fire Rate, <span class='tradeoff'>-5% Damage</span>.", rarity: "Uncommon", apply: (p) => { p.shotsPerSecond = (p.shotsPerSecond || 1.0) * 1.15; p.fireRate = 1000 / p.shotsPerSecond; p.damageMultiplier = (p.damageMultiplier || 1.0) * 0.95; }},
    { id: "area_damage_s", name: "Shrapnel S", description: "+10% Area Damage.", rarity: "Uncommon", apply: (p) => { p.areaDamageMultiplier = (p.areaDamageMultiplier || 1.0) * 1.10; }},
    { id: "shield_regen_s", name: "Shield Battery S", description: "+10% Shield Regen Rate.", rarity: "Uncommon", apply: (p) => { if(p.maxShield && p.maxShield > 0) p.shieldRegenRate = (p.shieldRegenRate || (0.05 * p.maxShield) || 1) * 1.10; }},
    { id: "status_effect_duration_s", name: "Lingering Effects S", description: "+15% Status Effect Duration (Fire, Ice, etc.).", rarity: "Uncommon", apply: (p) => { p.statusEffectDurationMultiplier = (p.statusEffectDurationMultiplier || 1.0) * 1.15; }},
    { id: "luck_xs", name: "Four-Leaf Clover Scrap", description: "+10% Luck Factor.", rarity: "Uncommon", apply: (p) => { p.luckFactor = (p.luckFactor || 1.0) * 1.10; }},
    { id: "shield_delay_reduction_s", name: "Quick Charge S", description: "-10% Shield Recharge Delay.", rarity: "Uncommon", apply: (p) => { if(p.maxShield && p.maxShield > 0) p.shieldRechargeDelay = (p.shieldRechargeDelay || 3000) * 0.90; }},
    { id: "crit_knockback_s", name: "Concussive Crits S", description: "Critical hits have +30% Knockback Strength.", rarity: "Uncommon", apply: (p) => { p.critKnockbackBonus = (p.critKnockbackBonus || 0) + 0.30; }},
    { id: "enemy_slow_on_hit_s", name: "Sticky Goo S", description: "5% chance on hit to slow enemy by 15% for 2s.", rarity: "Uncommon", apply: (p) => { p.slowOnHitChance = (p.slowOnHitChance || 0) + 0.05; p.slowOnHitFactor = 0.15; p.slowOnHitDuration = 2000; }},

    // Rare
    { id: "hp_boost_l", name: "+60 Max HP", description: "Large health increase.", rarity: "Rare", apply: (p) => { p.maxHp = (p.maxHp || 0) + 60; p.hp = Math.min((p.hp || 0) + 60, p.maxHp); }},
    { id: "dmg_boost_l", name: "+30% Damage", description: "Large damage increase.", rarity: "Rare", apply: (p) => { p.damageMultiplier = (p.damageMultiplier || 1.0) + 0.30; }},
    { id: "multishot_1", name: "Twin Barrel", description: "+1 Projectile", rarity: "Rare", apply: (p) => { p.numProjectiles = (p.numProjectiles || 1) + 1; p.projectileSpreadAngle = (p.numProjectiles > 1) ? Math.max(5, (p.projectileSpreadAngle || 5)) : 0; }},
    { id: "crit_damage_s", name: "Sharpshooter S", description: "+40% Crit Damage", rarity: "Rare", apply: (p) => { p.critDamageMultiplier = (p.critDamageMultiplier || 1.5) + 0.40; }},
    { id: "focused_power", name: "Focused Power", description: "+40% Dmg, <span class='tradeoff'>-15% FR</span>", rarity: "Rare", apply: (p) => { p.damageMultiplier = (p.damageMultiplier || 1.0) + 0.40; p.shotsPerSecond = (p.shotsPerSecond || 1.0) * 0.85;p.fireRate = 1000 / p.shotsPerSecond;}},
    { id: "pierce_1", name: "Piercer Rounds", description: "Projectiles pierce +1 enemy.", rarity: "Rare", apply: (p) => { p.bulletPiercing = (p.bulletPiercing || 0) + 1; }},
    { id: "hp_regen_m", name: "Regenerative Nanites M", description: "+1.5 HP/sec Regen.", rarity: "Rare", apply: (p) => { p.hpRegenRate = (p.hpRegenRate || 0) + 1.5; }},
    { id: "dmg_reduction_m", name: "Ballistic Weave M", description: "Reduce incoming damage by 7%.", rarity: "Rare", apply: (p) => { p.damageReduction = (p.damageReduction || 0) + 0.07; }},
    { id: "multishot_spread_reduction", name: "Focus Lens", description: "-15% Projectile Spread with Multishot.", rarity: "Rare", apply: (p) => { p.projectileSpreadAngle = Math.max(0, (p.projectileSpreadAngle || 5) * 0.85); }},
    { id: "life_steal_s", name: "Siphon Rounds S", description: "1% of damage dealt is returned as HP.", rarity: "Rare", apply: (p) => { p.lifeStealPercent = (p.lifeStealPercent || 0) + 0.01; }},
    { id: "elemental_lightning_chance_s", name: "Shock Inductors S", description: "+7% Chance for Lightning to Chain to 1 nearby enemy.", rarity: "Rare", apply: (p) => { p.elementalChance = (p.elementalChance || {}); p.elementalChance.lightning = (p.elementalChance.lightning || 0) + 0.07; p.lightningChainTargets = (p.lightningChainTargets || 0) + 1; }},
    { id: "homing_projectiles_s", name: "Seeker Protocol S", description: "Projectiles have slight homing capabilities.", rarity: "Rare", apply: (p) => { p.homingStrength = (p.homingStrength || 0) + 0.1; }},
    { id: "crit_chance_m", name: "Critical Lens M", description: "+12% Crit Chance.", rarity: "Rare", apply: (p) => { p.critChance = (p.critChance || 0) + 0.12; }},
    { id: "proj_speed_m", name: "Velocity Coils M", description: "+30% Projectile Speed.", rarity: "Rare", apply: (p) => { p.bulletSpeed = (p.bulletSpeed || 1.0) * 1.30; }},
    { id: "explosive_rounds_s", name: "HE Rounds S", description: "5% chance for bullets to explode on impact (small AoE).", rarity: "Rare", apply: (p) => { p.bulletExplosionChance = (p.bulletExplosionChance || 0) + 0.05; p.bulletExplosionRadius = (p.bulletExplosionRadius || 50); p.bulletExplosionDamage = (p.bulletExplosionDamage || 10); }},
    { id: "shield_capacity_s", name: "Energy Shield S", description: "+25 Max Shield. Activates shield system if not present.", rarity: "Rare", apply: (p) => { if (!p.maxShield || p.maxShield === 0) { p.maxShield = 0; p.shield = 0; p.shieldRechargeDelay = p.shieldRechargeDelay || 3000; p.shieldRegenRate = p.shieldRegenRate || 0; } p.maxShield += 25; if(p.shieldRegenRate === 0 && p.maxShield > 0) p.shieldRegenRate = 0.05 * p.maxShield; p.shield = Math.min((p.shield || 0) + 25, p.maxShield); if (!p.activeAugmentations) p.activeAugmentations = []; if(!p.activeAugmentations.some(aug => aug.id === 'shield_system_online')) {p.activeAugmentations.push({id:'shield_system_online', rarity: 'System'});} }},
    { id: "adrenaline_rush_s", name: "Adrenaline Junkie", description: "+10% Move Speed & Fire Rate for 3s after a kill.", rarity: "Rare", apply: (p) => { p.adrenalineOnKill = true; p.adrenalineDuration = 3000; p.adrenalineMoveSpeedBonus = 0.10; p.adrenalineFireRateBonus = 0.10; }},
    { id: "pierce_2", name: "Adamantium Rounds", description: "Projectiles pierce +2 enemies.", rarity: "Rare", apply: (p) => { p.bulletPiercing = (p.bulletPiercing || 0) + 2; }},
    { id: "glass_cannon_s", name: "Glass Cannon", description: "+50% Damage, <span class='tradeoff'>Max HP set to 50</span>.", rarity: "Rare", apply: (p) => { p.damageMultiplier = (p.damageMultiplier || 1.0) + 0.50; p.maxHp = 50; p.hp = Math.min(p.hp, p.maxHp); p.isGlassCannon = true; }},
    { id: "homing_strength_m", name: "Advanced Targeting M", description: "+25% Homing Strength for projectiles.", rarity: "Rare", apply: (p) => { p.homingStrength = (p.homingStrength || 0) + 0.25; }},
    { id: "multishot_tradeoff_firerate_s", name: "Splitter Module", description: "+1 Projectile, <span class='tradeoff'>-10% Fire Rate</span>.", rarity: "Rare", apply: (p) => { p.numProjectiles = (p.numProjectiles || 1) + 1; p.projectileSpreadAngle = (p.numProjectiles > 1) ? Math.max(5, (p.projectileSpreadAngle || 5)) : 0; p.shotsPerSecond = (p.shotsPerSecond || 1.0) * 0.90; p.fireRate = 1000 / p.shotsPerSecond; }},
    { id: "damage_on_dash_s", name: "Kinetic Dash S", description: "Dashing through enemies deals 25 damage.", rarity: "Rare", apply: (p) => { p.dashDamage = (p.dashDamage || 0) + 25; }},

    // Epic
    { id: "overcharge", name: "Overcharge", description: "+25% FR, +10% Dmg, <span class='tradeoff'>-15 Max HP</span>", rarity: "Epic", apply: (p) => { p.shotsPerSecond = (p.shotsPerSecond || 1.0) * 1.25; p.fireRate = 1000/p.shotsPerSecond; p.damageMultiplier = (p.damageMultiplier || 1.0) + 0.10; p.maxHp = Math.max(10, (p.maxHp || 0) - 15); p.hp = Math.min(p.hp, p.maxHp);}},
    { id: "luck_s", name: "Lucky Charm", description: "Better Augment Rarity", rarity: "Epic", apply: (p) => { p.luckFactor = (p.luckFactor || 1.0) * 1.25; }},
    { id: "crit_mastery", name: "Critical Mastery", description: "+10% Crit Chance, +50% Crit Dmg", rarity: "Epic", apply: (p) => { p.critChance = (p.critChance || 0) + 0.10; p.critDamageMultiplier = (p.critDamageMultiplier || 1.5) + 0.50; }},
    { id: "elemental_mastery_s", name: "Elemental Affinity", description: "+10% Elemental Effect Chance, +15% Elemental Damage.", rarity: "Epic", apply: (p) => { p.globalElementalChanceBonus = (p.globalElementalChanceBonus || 0) + 0.10; p.globalElementalDamageBonus = (p.globalElementalDamageBonus || 1.0) * 1.15; }},
    { id: "invulnerability_on_hit_s", name: "Reactive Armor S", description: "20% chance for 1s invulnerability on taking damage (10s cooldown).", rarity: "Epic", apply: (p) => { p.invulnOnHitChance = 0.20; p.invulnOnHitDuration = 1000; p.invulnOnHitCooldown = 10000; p.invulnOnHitTimer = 0; }},
    { id: "chain_reaction_s", name: "Chain Reaction", description: "Enemies explode on death, dealing 15% of their max HP as damage to nearby enemies.", rarity: "Epic", apply: (p) => { p.chainReactionOnDeath = true; p.chainReactionDamagePercent = 0.15; }},
    { id: "crit_causes_bleed", name: "Grievous Wounds", description: "Critical hits also cause enemies to bleed for 30% of hit damage over 3s.", rarity: "Epic", apply: (p) => { p.critCausesBleed = true; p.bleedDpsPercentOfHit = 0.30; p.bleedDuration = 3000; }},
    { id: "multishot_2", name: "Triple Barrel", description: "+2 Projectiles.", rarity: "Epic", apply: (p) => { p.numProjectiles = (p.numProjectiles || 1) + 2; p.projectileSpreadAngle = (p.numProjectiles > 1) ? Math.max(10, (p.projectileSpreadAngle || 5)) : 0; }},
    { id: "shield_recharge_delay_reduction_m", name: "Fast Charge M", description: "-30% Shield Recharge Delay.", rarity: "Epic", apply: (p) => { if(p.maxShield && p.maxShield > 0) p.shieldRechargeDelay = (p.shieldRechargeDelay || 3000) * 0.70; }},
    { id: "xp_radius_l", name: "Magnet L", description: "+100% XP Collection Radius.", rarity: "Epic", apply: (p) => { p.xpCollectionRadiusMultiplier = (p.xpCollectionRadiusMultiplier || 1.0) * 2.00; p.pickupRadiusMultiplier = (p.pickupRadiusMultiplier || 1.0) * 2.00;}},
    { id: "berserker_fury", name: "Berserker's Fury", description: "+1% Damage for every 1% HP missing.", rarity: "Epic", apply: (p) => { p.berserkerFuryActive = true; }},
    { id: "orbital_striker_s", name: "Orbital Strike Beacon", description: "Calls down a small laser strike every 20 seconds.", rarity: "Epic", apply: (p) => { p.orbitalStrike = { active: true, damage: 50, cooldown: 20, timer: 20 }; }}, // Timer in seconds
    { id: "regenerative_plating_epic", name: "Regenerative Plating", description: "If HP is below 25%, regenerate 5 HP/sec.", rarity: "Epic", apply: (p) => { p.lowHpRegenThreshold = 0.25; p.lowHpRegenRate = 5; }},
    { id: "luck_m", name: "Rabbit's Foot", description: "+40% Luck Factor.", rarity: "Epic", apply: (p) => { p.luckFactor = (p.luckFactor || 1.0) * 1.40; }},
    { id: "aoe_size_l", name: "Expansive Ordnance L", description: "+30% Area of Effect size for all AoE.", rarity: "Epic", apply: (p) => { p.areaDamageMultiplier = (p.areaDamageMultiplier || 1.0) * 1.30; }},
    { id: "max_hp_percent_boost_s", name: "Vitality Core", description: "+15% Max HP.", rarity: "Epic", apply: (p) => { const baseMaxHpForCalc = p.baseStats.maxHp || p.maxHp; const boost = Math.floor(baseMaxHpForCalc * 0.15); p.maxHp = (p.maxHp || 0) + boost; p.hp = Math.min((p.hp || 0) + boost, p.maxHp); }},
    { id: "temporary_invulnerability_on_dash", name: "Phase Dash", description: "Dash grants 0.25s of invulnerability.", rarity: "Epic", apply: (p) => { p.dashInvulnDuration = 250; }}, // ms
    { id: "elemental_cascade", name: "Elemental Cascade", description: "Enemies dying with a status effect explode with that element.", rarity: "Epic", apply: (p) => { p.elementalCascadeActive = true; }},
    { id: "crit_ricochet", name: "Critical Deflection", description: "Critical hits have 50% chance to ricochet to a nearby enemy for 50% damage.", rarity: "Epic", apply: (p) => {p.critRicochetChance = 0.5; p.critRicochetDamageFactor = 0.5; }},
    { id: "phantom_strike_s", name: "Phantom Strike", description: "Every 5th shot fires an additional phantom projectile that pierces all enemies and deals 75% damage.", rarity: "Epic", apply: (p) => { p.phantomStrikeShotInterval = 5; p.phantomStrikeDamageFactor = 0.75; p.phantomStrikeCounter = 0;}},
    { id: "precision_focus", name: "Precision Focus", description: "After 3 non-critical hits in a row, your next hit is a guaranteed critical hit with +25% crit damage.", rarity: "Epic", apply: (p) => {p.nonCritStreakThreshold = 3; p.guaranteedCritDamageBonus = 0.25; p.nonCritStreak = 0; p.guaranteedCritNextShot = false;}},

    // Legendary
    { id: "legendary_power_surge", name: "Power Surge", description: "+75% Damage!", rarity: "Legendary", apply: (p) => { p.damageMultiplier = (p.damageMultiplier || 1.0) + 0.75; }},
    { id: "legendary_bullet_hell", name: "Bullet Hell", description: "+50% Fire Rate, +2 Projectiles!", rarity: "Legendary", apply: (p) => { p.shotsPerSecond = (p.shotsPerSecond || 1.0) * 1.5; p.fireRate = 1000/p.shotsPerSecond; p.numProjectiles = (p.numProjectiles || 1) +2; p.projectileSpreadAngle = (p.numProjectiles > 1) ? Math.max(10, (p.projectileSpreadAngle || 5)) : 0;}},
    { id: "legendary_omni_shield", name: "Omni-Shield", description: "+50 Max Shield, Shield recharges faster.", rarity: "Legendary", apply: (p) => { if (!p.maxShield || p.maxShield === 0) { p.maxShield = 0; p.shield = 0;} p.maxShield += 50; if(p.shieldRegenRate === 0 && p.maxShield > 0) p.shieldRegenRate = (0.05 * p.maxShield) || 2.5; p.shield = Math.min((p.shield || 0) + 50, p.maxShield); if(!p.activeAugmentations) p.activeAugmentations = []; if(!p.activeAugmentations.some(aug => aug.id === 'shield_system_online')) {p.activeAugmentations.push({id:'shield_system_online', rarity: 'System'});} p.shieldRechargeDelay = (p.shieldRechargeDelay || 3000) * 0.7; p.shieldRegenRate = p.shieldRegenRate * 1.3;}},
    { id: "temporal_distortion", name: "Temporal Distortion", description: "10% chance on hit to freeze enemy in time for 2s. You move 15% faster.", rarity: "Legendary", apply: (p) => { p.timeFreezeChance = 0.10; p.timeFreezeDuration = 2000; p.speed = (p.speed || 1.0) * 1.15; }},
    { id: "phoenix_protocol", name: "Phoenix Protocol", description: "Revive once per run with 50% HP.", rarity: "Legendary", apply: (p) => { p.phoenixProtocolEnabled = true; p.phoenixProtocolUsed = false; }},
    { id: "elemental_overlord", name: "Elemental Overlord", description: "All shots are imbued with random elemental effects (Fire, Ice, Lightning, Poison). +25% Elemental Damage & Chance.", rarity: "Legendary", apply: (p) => { p.isElementalOverlord = true; p.globalElementalDamageBonus = (p.globalElementalDamageBonus || 1.0) * 1.25; p.globalElementalChanceBonus = (p.globalElementalChanceBonus || 0) + 0.25; }},
    { id: "adaptive_armor_legendary", name: "Adaptive Armor", description: "Gain +5% resistance to the last damage type received (stacks up to 25%). Resets on new damage type.", rarity: "Legendary", apply: (p) => { p.adaptiveArmor = { active: true, currentResistance: 0, maxResistance: 0.25, increment: 0.05, lastDamageType: null }; }},
    { id: "second_wind_legendary", name: "Second Wind", description: "Once per combat, if HP drops below 10%, gain +50% fire rate and invulnerability for 3 seconds.", rarity: "Legendary", apply: (p) => { p.secondWindEnabled = true; p.secondWindThreshold = 0.10; p.secondWindBuffDuration = 3000; p.secondWindFireRateBonus = 0.50; p.secondWindUsedThisCombat = false; }},
    { id: "omni_crit_legendary", name: "Omni-Crit", description: "All damage can crit (AoE, Status etc.). Non-weapon damage has 50% of your crit chance/damage.", rarity: "Legendary", apply: (p) => { p.omniCritActive = true; }},
    { id: "duplicator_rounds_legendary", name: "Duplicator Rounds", description: "Projectiles have a 15% chance to split into two after hitting an enemy.", rarity: "Legendary", apply: (p) => { p.duplicatorRoundsChance = 0.15; }},
    { id: "vampiric_embrace_legendary", name: "Vampiric Embrace", description: "+5% Lifesteal. Killing an enemy with lifesteal grants a temporary +1 Max HP (up to +50 per run).", rarity: "Legendary", apply: (p) => { p.lifeStealPercent = (p.lifeStealPercent || 0) + 0.05; p.vampiricEmbraceMaxHpGainCap = 50; p.vampiricEmbraceCurrentHpGain = 0; }},
    { id: "arsenal_overdrive_legendary", name: "Arsenal Overdrive", description: "+2 Projectiles, Projectiles Pierce +2, +25% Projectile Speed, <span class='tradeoff'>-10% Damage</span>.", rarity: "Legendary", apply: (p) => { p.numProjectiles = (p.numProjectiles || 1) + 2; p.projectileSpreadAngle = (p.numProjectiles > 1) ? Math.max(10, (p.projectileSpreadAngle || 5)) : 0; p.bulletPiercing = (p.bulletPiercing || 0) + 2; p.bulletSpeed = (p.bulletSpeed || 1.0) * 1.25; p.damageMultiplier = (p.damageMultiplier || 1.0) * 0.90; }},
    { id: "true_strike_legendary", name: "True Strike", description: "Your attacks cannot miss and ignore 25% of enemy armor.", rarity: "Legendary", apply: (p) => { p.trueStrikeActive = true; p.armorPenetration = (p.armorPenetration || 0) + 0.25; }},
    { id: "augment_synergizer_legendary", name: "Synergy Core", description: "For every 3 Augments of the same Rarity you possess, gain +5% damage and +5% Max HP.", rarity: "Legendary", apply: (p) => { p.augmentSynergizerActive = true; recalculateAugmentSynergy(); }},
    { id: "ultimate_sacrifice_legendary", name: "Ultimate Sacrifice", description: "At start of next floor, permanently sacrifice 50% current HP for +30% DMG, +30% FR, +15% Speed, +15% Max HP.", rarity: "Legendary", apply: (p) => { p.ultimateSacrificePending = true; }},
    { id: "death_defiance_s_leg", name: "Cheat Death", description: "The first time you would take fatal damage, survive with 1 HP (once per run).", rarity: "Legendary", apply: (p) => { p.deathDefianceUsed = false; }},
];